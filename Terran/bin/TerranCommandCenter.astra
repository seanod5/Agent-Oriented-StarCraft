agent terranCommandCenter {
	module EIS eis;
	module Console C;
	module System S;
	module Prelude P;
	
	types status {
		formula queueSize(int);
	}
	
	types resources {
		formula minerals(int);
		formula vespeneGas(int);
		formula currentSupply(int);
		formula totalSupply(int);
	}
	
	types messages {
		formula content(string);
		formula supply(string);
		formula ready(string);
		formula explore(int, int);
	}
	
	types checks {
		formula supplyRequest(boolean);
	}
	
	initial !init();
	initial minerals(50);
	initial vespeneGas(0);
	initial currentSupply(4);
	initial totalSupply(10);
	initial queueSize(0);
	initial supplyRequest(false);
	initial waiting(true);
	
	rule +!init() {
		eis.join("starcraft");
		eis.link();
		C.println("Command Center online.");
		int i = 0;
		while(i < 6) {
			!trainSCV();
			i++;
		}
	}
	
	rule +!trainSCV() : minerals(int minerals) & currentSupply(int CS) & totalSupply(int TS) & (minerals >= 50) & (CS < TS) & queueSize(int queueSize) & (queueSize < 5) {
		eis.train("Terran SCV");
	}
	
	rule +!trainSCV() {
		!trainSCV();
	}
	
	rule +$eis.event(queueSize(int size)) : queueSize(int prevSize) {
		-queueSize(prevSize);
		+queueSize(size);
	}
	
	rule +$eis.event(resources(int minerals, int gas, int CS, int TS)) :
	 minerals(int prevM) & vespeneGas(int prevG) & currentSupply(int prevCS) & totalSupply(int prevTS) & supplyRequest(boolean SR) {
		-minerals(prevM);
		-vespeneGas(prevG);
		-currentSupply(prevCS);
		-totalSupply(prevTS);
		+minerals(minerals);
		+vespeneGas(gas);
		+currentSupply(CS);
		+totalSupply(TS);
		
		if((CS == TS) & (SR == false)) {
			-supplyRequest(SR);
			+supplyRequest(true);
			C.println("Request sent");
			send(inform, S.getOwner(), ready("ready"));
		}
	}
	
//	rule +$eis.event(resources(int minerals, int gas, int CS, CS)) : ~supplyRequest(true) {
//		+supplyRequest(true);
//		
//		query(eis.resources(int m, int g, int cs, int ts));
//		
//		C.println("m="+m);
//		C.println("Request sent");
//		send(inform, S.getOwner(), ready("ready"));
//	}
//	
//	rule @message(inform, string sender, content("Supply Depot Built")) : supplyRequest(true) {
//		-supplyRequest(true);
//	}	

	rule +$eis.event(resources(int minerals, int gas, int CS, int TS)) : minerals(int prevM) & vespeneGas(int prevG) & currentSupply(int prevCS) & totalSupply(int prevTS) & supplyRequest(boolean SR) {
		-minerals(prevM);
		-vespeneGas(prevG);
		-currentSupply(prevCS);
		-totalSupply(prevTS);
		+minerals(minerals);
		+vespeneGas(gas);
		+currentSupply(CS);
		+totalSupply(TS);
		
		if((CS == TS - 4) & (SR == false)) {
			-supplyRequest(SR);
			+supplyRequest(true);
			C.println("Request sent");
			send(inform, S.getOwner(), ready("ready"));
			query(eis.base(int x, int y, boolean isStart, int regionID));
			send(inform, S.getOwner(), explore(x, y));
		}
	}
	
	rule @message(inform, string sender, content(string content)) : supplyRequest(boolean SR) {
		if((content == "Supply Depot Built") & (SR == true)) {
			-supplyRequest(SR);
			+supplyRequest(false);
		}
	}	
}
